
Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
ft::vector<int> ft_default_vector;

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
std::vector<int> stl_default_vector;

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : true
Size        : 0
Max size    : 4611686018427387903
Capacity    : 0
Content     : []

FT : 
Empty    [✔]: true
Size     [✔]: 0
Max size [✔]: 4611686018427387903
Capacity [✔]: 0
Content  [✔]: []
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380755572
end    stl  =>                1633966380755572
time   stl  =>                [0]

start  ft   =>                1633966380755572
end    ft   =>                1633966380755573
time   ft   =>                [1]
percentage: 
ft : stl 	=>	[100%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************




Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
ft::vector<int> *ft_pointer_default_vector = new ft::vector<int>;

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
std::vector<int> *stl_pointer_default_vector = new std::vector<int>;

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : true
Size        : 0
Max size    : 4611686018427387903
Capacity    : 0
Content     : []

FT : 
Empty    [✔]: true
Size     [✔]: 0
Max size [✔]: 4611686018427387903
Capacity [✔]: 0
Content  [✔]: []
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380755884
end    stl  =>                1633966380755884
time   stl  =>                [0]

start  ft   =>                1633966380755884
end    ft   =>                1633966380755884
time   ft   =>                [0]
percentage: 
ft : stl 	=>	[0%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************




Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
ft::vector<int> ft_fill_vector(0);

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
std::vector<int> stl_fill_vector(0);

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : true
Size        : 0
Max size    : 4611686018427387903
Capacity    : 0
Content     : []

FT : 
Empty    [✔]: true
Size     [✔]: 0
Max size [✔]: 4611686018427387903
Capacity [✔]: 0
Content  [✔]: []
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380757440
end    stl  =>                1633966380757440
time   stl  =>                [0]

start  ft   =>                1633966380757440
end    ft   =>                1633966380757441
time   ft   =>                [1]
percentage: 
ft : stl 	=>	[100%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************




Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
ft::vector<int> ft_fill_vector_sized(19);

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
std::vector<int> stl_fill_vector_sized(19);

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : false
Size        : 19
Max size    : 4611686018427387903
Capacity    : 19
Content     : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

FT : 
Empty    [✔]: false
Size     [✔]: 19
Max size [✔]: 4611686018427387903
Capacity [✔]: 19
Content  [✔]: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380758856
end    stl  =>                1633966380758873
time   stl  =>                [17]

start  ft   =>                1633966380758873
end    ft   =>                1633966380758873
time   ft   =>                [0]
percentage: 
ft : stl 	=>	[0%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************




Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
ft::vector<int> ft_fill_vector_sized(19, 42);

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
std::vector<int> stl_fill_vector_sized(19, 42);

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : false
Size        : 19
Max size    : 4611686018427387903
Capacity    : 19
Content     : [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]

FT : 
Empty    [✔]: false
Size     [✔]: 19
Max size [✔]: 4611686018427387903
Capacity [✔]: 19
Content  [✔]: [42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42]
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380760169
end    stl  =>                1633966380760170
time   stl  =>                [1]

start  ft   =>                1633966380760170
end    ft   =>                1633966380760170
time   ft   =>                [0]
percentage: 
ft : stl 	=>	[0%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************




Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
int range_array_[] = { 45, 87846, 12, 965, 5 };
int range_array__[] = { 45, 87846, 12, 965, 5 };
int range_array__[] = { 45, 87846, 12, 965, 5 };
ft::vector<int>::iterator ft_iterator(&(range_array[0]));
ft::vector<int> ft_range_vector(ft_iterator, ft_iterator + 5);

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
int range_array_[] = { 45, 87846, 12, 965, 5 };
int range_array__[] = { 45, 87846, 12, 965, 5 };
int range_array__[] = { 45, 87846, 12, 965, 5 };
std::vector<int>::iterator stl_iterator(&(range_array[0]));
std::vector<int> stl_range_vector(stl_iterator, stl_iterator + 5);

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : false
Size        : 5
Max size    : 4611686018427387903
Capacity    : 5
Content     : [45, 87846, 12, 965, 5]

FT : 
Empty    [✔]: false
Size     [✔]: 5
Max size [✔]: 4611686018427387903
Capacity [✔]: 5
Content  [✔]: [45, 87846, 12, 965, 5]
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380761687
end    stl  =>                1633966380761688
time   stl  =>                [1]

start  ft   =>                1633966380761688
end    ft   =>                1633966380761689
time   ft   =>                [1]
percentage: 
ft : stl 	=>	[100%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************




Code executed:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
int range_array_[] = { -89, 561, 874, 7777 , 987, -6 };
int range_array__[] = { -89, 561, 874, 7777 , 987, -6 };
int range_array__[] = { -89, 561, 874, 7777 , 987, -6 };
ft::vector<int>::iterator ft_iterator(&(range_array[0]));
ft::vector<int> ft_range_vector(ft_iterator, ft_iterator + 6);
ft::vector<int> ft_copy_vector(ft_range_vector);

Compared with:
¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯
int range_array_[] = { -89, 561, 874, 7777 , 987, -6 };
int range_array__[] = { -89, 561, 874, 7777 , 987, -6 };
int range_array__[] = { -89, 561, 874, 7777 , 987, -6 };
std::vector<int>::iterator stl_iterator(&(range_array[0]));
std::vector<int> stl_range_vector(stl_iterator, stl_iterator + 6);
std::vector<int> stl_copy_vector(stl_range_vector);

══════════════════════════════════════════════════════════════
Vectors attributes : 
STL : 
Empty       : false
Size        : 6
Max size    : 4611686018427387903
Capacity    : 6
Content     : [-89, 561, 874, 7777, 987, -6]

FT : 
Empty    [✔]: false
Size     [✔]: 6
Max size [✔]: 4611686018427387903
Capacity [✔]: 6
Content  [✔]: [-89, 561, 874, 7777, 987, -6]
══════════════════════════════════════════════════════════════



>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
[33mSpeed Evaluation: [0m
start  stl  =>                1633966380762831
end    stl  =>                1633966380762832
time   stl  =>                [1]

start  ft   =>                1633966380762832
end    ft   =>                1633966380762841
time   ft   =>                [9]
percentage: 
ft : stl 	=>	[900%] [[32m✔[0m]
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

**************************************************************



